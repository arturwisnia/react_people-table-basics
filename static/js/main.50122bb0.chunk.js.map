{"version":3,"sources":["components/HomePage.tsx","api.ts","components/PersonInfo.tsx","components/Loader/Loader.tsx","components/PeoplePage.tsx","components/PageNotFound.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","existingPerson","people","find","p","name","to","slug","sex","Loader","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","useParams","useEffect","data","catch","length","map","born","died","motherName","fatherName","PageNotFound","Navbar","role","isActive","classNames","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.50122bb0.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport { PersonLinkProps } from '../types';\n\nexport const PersonLink: React.FC<PersonLinkProps> = ({ person, people }) => {\n  const existingPerson = people.find(p => p.name === person);\n\n  return existingPerson ? (\n    <Link\n      to={`/people/${existingPerson.slug}`}\n      className={existingPerson.sex === 'f' ? 'has-text-danger' : ''}\n    >\n      {person}\n    </Link>\n  ) : (\n    <span>{person || '-'}</span>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonInfo';\nimport { Loader } from './Loader/Loader';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n  const { slug } = useParams();\n\n  useEffect(() => {\n    getPeople()\n      .then((data) => {\n        setPeople(data);\n        setIsLoading(false);\n      })\n      .catch(() => {\n        setIsLoading(false);\n        setHasError(true);\n        setPeople([]);\n      });\n  }, []);\n\n  const renderContent = () => {\n    if (hasError) {\n      return <p data-cy=\"peopleLoadingError\">Something went wrong</p>;\n    }\n\n    if (isLoading) {\n      return <Loader />;\n    }\n\n    if (people.length === 0) {\n      return <p data-cy=\"noPeopleMessage\">There are no people on the server</p>;\n    }\n\n    return (\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n        <tbody>\n          {people.map((person) => (\n            <tr\n              data-cy=\"person\"\n              key={person.slug}\n              className={slug === person.slug ? 'has-background-warning' : ''}\n            >\n              <td>\n                <PersonLink person={person.name} people={people} />\n              </td>\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                <PersonLink person={person.motherName || ''} people={people} />\n              </td>\n              <td>\n                <PersonLink person={person.fatherName || ''} people={people} />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {renderContent()}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const PageNotFound = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { PageNotFound } from './components/PageNotFound';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/people\" element={<PeoplePage />} />\n            <Route path=\"/people/:slug\" element={<PeoplePage />} />\n            <Route path=\"/*\" element={<PageNotFound />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}
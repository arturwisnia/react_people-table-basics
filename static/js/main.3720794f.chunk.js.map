{"version":3,"sources":["api.ts","components/Loader/PersonInfo.tsx","components/Loader/Loader.tsx","components/People.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonInfo","person","people","location","useLocation","personFather","find","p","name","fatherName","personMother","motherName","className","cn","pathname","slug","to","sex","born","died","Loader","PeoplePage","useState","setPeople","isLoading","setIsLoading","noPeopleMessage","setNoPeopleMessage","error","setError","useEffect","resp","length","catch","finally","map","App","role","isActive","path","element","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.3720794f.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { NavLink, useLocation } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype PersonInfoProps = {\n  person: Person;\n  people: Person[];\n};\n\nexport const PersonInfo = ({ person, people }: PersonInfoProps) => {\n  const location = useLocation();\n  const personFather = people.find(p => p.name === person.fatherName);\n  const personMother = people.find(p => p.name === person.motherName);\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': location.pathname === `/people/${person.slug}`,\n      })}\n    >\n      <td>\n        <NavLink\n          to={`/people/${person.slug}`}\n          className={cn({\n            'has-text-danger': person.sex === 'f',\n          })}\n        >\n          {person.name}\n        </NavLink>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {personMother\n          ? (\n            <NavLink\n              className=\"has-text-danger\"\n              to={`/people/${personMother.slug}`}\n            >\n              {personMother.name}\n            </NavLink>\n          ) : person.motherName || '-'}\n\n      </td>\n      <td>\n        {personFather\n          ? (\n            <NavLink\n              to={`/people/${personFather.slug}`}\n            >\n              {personFather.name}\n            </NavLink>\n          ) : person.fatherName || '-'}\n\n      </td>\n    </tr>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { PersonInfo } from './Loader/PersonInfo';\nimport { Loader } from './Loader';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>();\n  const [isLoading, setIsLoading] = useState(false);\n  const [noPeopleMessage, setNoPeopleMessage] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then((resp) => {\n        setPeople(resp);\n\n        if (resp.length === 0) {\n          setNoPeopleMessage(true);\n        }\n      })\n      .catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {error\n            && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            )}\n\n          {noPeopleMessage\n            && (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )}\n\n          {!isLoading\n            && (\n              <table\n                data-cy=\"peopleTable\"\n                className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sex</th>\n                    <th>Born</th>\n                    <th>Died</th>\n                    <th>Mother</th>\n                    <th>Father</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {people?.map(person => {\n                    return (\n                      <PersonInfo\n                        person={person}\n                        people={people}\n                        key={person.slug}\n                      />\n                    );\n                  })}\n                </tbody>\n              </table>\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  NavLink, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport cn from 'classnames';\n\nimport './App.scss';\nimport { PeoplePage } from './components/People';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => cn('navbar-item',\n              { 'has-background-grey-lighter': isActive })}\n          >\n            Home\n          </NavLink>\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => cn('navbar-item',\n              { 'has-background-grey-lighter': isActive })}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route\n            path=\"/home\"\n            element={<Navigate to=\"/\" />}\n          />\n          <Route\n            path=\"/people\"\n            element={<PeoplePage />}\n          />\n          <Route\n            path=\"/people/:personSlug\"\n            element={<PeoplePage />}\n          />\n          <Route\n            path=\"/*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}